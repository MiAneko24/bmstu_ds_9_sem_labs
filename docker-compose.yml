version: "3"
services:
  hotels-reservation-db:
    build:
      context: postgres
    restart: on-failure
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql
    networks:
      - host

  loyalty-service:
    build:
      context: v2
      args:
        PROJECT: loyaltyService
    restart: unless-stopped
    ports:
      - 8050:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://hotels-reservation-db:5432/loyalties
      - SPRING_DATASOURCE_USERNAME=loyalty
      - SPRING_DATASOURCE_PASSWORD=loyalty
    depends_on:
      - hotels-reservation-db
    networks:
      - host

  payment-service:
    build:
      context: v2
      args:
        PROJECT: paymentService
    restart: unless-stopped
    ports:
      - 8060:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://hotels-reservation-db:5432/payments
      - SPRING_DATASOURCE_USERNAME=payment
      - SPRING_DATASOURCE_PASSWORD=payment
    depends_on:
      - hotels-reservation-db
    networks:
      - host

  reservation-service:
    build:
      context: v2
      args:
        PROJECT: reservationService
    restart: unless-stopped
    ports:
      - 8070:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://hotels-reservation-db:5432/reservations
      - SPRING_DATASOURCE_USERNAME=reservation
      - SPRING_DATASOURCE_PASSWORD=reservation
    depends_on:
      - hotels-reservation-db
    networks:
      - host

  gateway:
    build:
      context: v2
      args:
        PROJECT: gateway
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      CUSTOM_SERVICES_LOYALTY: "http://loyalty-service:8080/api/v1/loyalties"
      CUSTOM_SERVICES_PAYMENT: "http://payment-service:8080/api/v1/payments"
      CUSTOM_SERVICES_RESERVATION: "http://reservation-service:8080/api/v1"
      RABBITMQ_HOST: rabbit-mq
    depends_on:
      - hotels-reservation-db
      - loyalty-service
      - reservation-service
      - payment-service
      - rabbit-mq
    networks:
      - host

  rabbit-mq:
    image: rabbitmq:3.12-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - 5672:5672
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    networks:
      - host


# TODO добавить сервисы

volumes:
  db-data:

networks:
  host:
    driver: bridge
